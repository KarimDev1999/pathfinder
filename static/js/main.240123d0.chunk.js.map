{"version":3,"sources":["components/PathFinder/PathFinder.jsx","components/WaveSpreading/WaveSpreading.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["matrix","Array","fill","map","_","centralRow","Math","floor","length","centralColumn","PathFinder","isSearching","currentAlgorithm","searchHelper","useState","start","setStart","dest","setDest","matrixRef","useRef","mouseMoveRef","useEffect","document","querySelectorAll","forEach","s","classList","remove","ref","style","width","height","display","flexWrap","className","row","rowIdx","column","columnIdx","onMouseDown","e","preventDefault","target","getAttribute","current","addEventListener","button","currentSquare","add","handleMouseDown","undefined","onMouseUp","removeEventListener","x","y","classnames","aggregateMatrix","middle","MATRIX_VALUE","queue","visited","Set","inc","neighbors","shift","n","nextNeighbors","reduce","p","c","idxs","filter","el","has","toString","push","WaveSpreading","flexDirection","justifyContent","alignItems","marginBottom","color","onClick","i","setTimeout","waveNode","createElement","appendChild","margin","wave","Header","dfs","bfs","reset","location","useLocation","textDecoration","to","pathname","includes","constructPath","path","prev","node","reverse","algorithm","withAnimations","setIsSearching","console","log","querySelector","dataStructure","pop","nY","nX","finalPath","value","App","setCurrentAlgorithm","exact","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.240123d0.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './PathFinder.css'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst matrix = new Array(30).fill(null).map(_ => new Array(64).fill(1))\r\nconst centralRow = Math.floor(matrix.length / 2)\r\nconst centralColumn = Math.floor(matrix[0].length / 2)\r\n\r\nconst PathFinder = ({ isSearching, currentAlgorithm, searchHelper }) => {\r\n    const [start, setStart] = useState([centralRow, centralColumn - 10])\r\n    const [dest, setDest] = useState([centralRow, centralColumn + 10])\r\n    const matrixRef = useRef()\r\n    const mouseMoveRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        if (start[0] !== centralRow || start[1] !== centralColumn - 10) {\r\n            let allSquares = document.querySelectorAll('.square');\r\n            allSquares.forEach(s => {\r\n                s.classList.remove('path', 'visited', 'visitedNoAnimation')\r\n            })\r\n            searchHelper(currentAlgorithm, false)\r\n        }\r\n    }, [start, dest])\r\n\r\n\r\n    const handleMouseDown = (e) => {\r\n        e.preventDefault()\r\n        if (!isSearching) {\r\n            if (e.target.getAttribute('data-start')) {\r\n                mouseMoveRef.current = (e) => {\r\n                    setStart([+e.target.getAttribute('y'), +e.target.getAttribute('x')])\r\n                }\r\n                matrixRef.current.addEventListener('mousemove', mouseMoveRef.current)\r\n            }\r\n            else if (e.target.getAttribute('data-dest')) {\r\n                mouseMoveRef.current = (e) => {\r\n                    setDest([+e.target.getAttribute('y'), +e.target.getAttribute('x')])\r\n                }\r\n                matrixRef.current.addEventListener('mousemove', mouseMoveRef.current)\r\n            }\r\n            else if (e.button === 0) {\r\n                let currentSquare = e.target;\r\n                currentSquare.classList.remove('visited', 'visitedNoAnimation', 'path')\r\n                currentSquare.classList.add('wall')\r\n                mouseMoveRef.current = (e) => {\r\n                    if (currentSquare !== e.target && (!e.target.getAttribute('data-start') && !e.target.getAttribute('data-dest'))) {\r\n                        currentSquare = e.target;\r\n                        currentSquare.classList.remove('visited', 'visitedNoAnimation', 'path')\r\n                        currentSquare.classList.add('wall')\r\n                    }\r\n                }\r\n                matrixRef.current.addEventListener('mousemove', mouseMoveRef.current)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div ref={matrixRef} style={{ width: '100vw', height: '900px', display: 'flex', flexWrap: 'wrap' }} className=\"App\">\r\n                {\r\n                    matrix.map((row, rowIdx) => row.map((column, columnIdx) => <div\r\n                        onMouseDown={(e) => handleMouseDown(e)}\r\n                        data-start={columnIdx === start[1] && rowIdx === start[0] ? true : undefined}\r\n                        data-dest={rowIdx === dest[0] && columnIdx === dest[1] ? true : undefined}\r\n                        onMouseUp={() => matrixRef.current.removeEventListener('mousemove', mouseMoveRef.current)}\r\n                        key={rowIdx + columnIdx}\r\n                        x={columnIdx}\r\n                        y={rowIdx}\r\n                        className={classnames('square',\r\n                            {\r\n                                'start': start[0] === rowIdx && start[1] === columnIdx,\r\n                            },\r\n                            {\r\n                                'dest': dest[0] === rowIdx && dest[1] === columnIdx,\r\n                            }\r\n                        )}\r\n                    >\r\n                    </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PathFinder\r\n","import React from 'react'\r\nimport './WaveSpreading.css'\r\nconst MATRIX_VALUE = 25\r\nconst matrix = new Array(MATRIX_VALUE).fill(null).map(_ => new Array(MATRIX_VALUE).fill(1))\r\n\r\nconst aggregateMatrix = () => {\r\n    let middle = Math.floor(MATRIX_VALUE / 2)\r\n    let queue = [[[middle, middle]]] // [[[y,x], [y,x], [y,x], [y,x]]]\r\n    let visited = new Set()\r\n    let inc = 1\r\n    while (inc <= MATRIX_VALUE && queue.length > 0) {\r\n        let neighbors = queue.shift()\r\n        // eslint-disable-next-line no-loop-func\r\n        neighbors.forEach(n => {\r\n            if (matrix[n[0]]) {\r\n                if ((matrix[n[0]][n[1]] === 1) && (n[0] !== middle || n[1] !== middle)) {\r\n                    matrix[n[0]][n[1]] = inc\r\n                }\r\n            }\r\n        })\r\n        let nextNeighbors = neighbors.reduce((p, c) => {\r\n            let idxs = [\r\n                [c[0] - 1, c[1]],\r\n                [c[0], c[1] - 1],\r\n                [c[0] + 1, c[1]],\r\n                [c[0], c[1] + 1],\r\n            ].filter(el => !visited.has(el.toString()) && (el[0] <= 25 && el[0] >= 0 && el[1] <= 25 && el[1] >= 0))\r\n            idxs.forEach(el => {\r\n                visited.add(el.toString())\r\n            })\r\n            p.push(...idxs)\r\n            return p\r\n        }, [])\r\n        inc++\r\n        queue.push(nextNeighbors)\r\n    }\r\n    return matrix\r\n}\r\n\r\n\r\n\r\nconst WaveSpreading = () => {\r\n    const rhombSpread = () => {\r\n        for (let i = 1; i <= MATRIX_VALUE; i++) {\r\n            let nodes = document.querySelectorAll(`[wave=\"${i}\"]`)\r\n            nodes.forEach((n) => {\r\n                setTimeout(() => {\r\n                    let waveNode = document.createElement('div')\r\n                    waveNode.classList.add('wave')\r\n                    n.appendChild(waveNode)\r\n                    setTimeout(() => {\r\n                        n.classList.remove('wave')\r\n                    }, i * 300)\r\n                }, i * 250)\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', width: 'calc(100vw - 40px)', height: '100vh' }}>\r\n            <button className='button' style={{ marginBottom: '20px', color: 'rgba(75, 114, 241, 0.801)' }} onClick={rhombSpread}>spread</button>\r\n            <div style={{ width: '750px', height: '750px', display: 'flex', flexWrap: 'wrap', margin: '0 auto' }} className=\"App\">\r\n                {\r\n                    aggregateMatrix().map((row, rowIdx) => row.map((column, columnIdx) => <div\r\n                        wave={column}\r\n                        key={rowIdx + columnIdx}\r\n                        x={columnIdx}\r\n                        y={rowIdx}\r\n                        className={`square`}>\r\n\r\n                    </div>))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WaveSpreading\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport './Header.css'\r\nconst Header = ({ dfs, bfs, reset }) => {\r\n    const location = useLocation()\r\n    return (\r\n        <div className='header'>\r\n            <nav>\r\n                <ul>\r\n                    <li >\r\n                        <Link style={{ textDecoration: 'none', color: '#fff' }} to='/wave'>\r\n                            wave-spreading\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link style={{ textDecoration: 'none', color: '#fff' }} to='/pathfinder'>\r\n                            pathfinder\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                {\r\n                    location.pathname.includes('pathfinder') &&\r\n                    <ul>\r\n                        <li>\r\n                            <button className='button' onClick={dfs}>\r\n                                depth-first-search\r\n                            </button>\r\n                            <button className='button' onClick={bfs}>\r\n                                breadth-first-search\r\n                            </button>\r\n                            <button className='button' onClick={reset}>\r\n                                reset\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n            </nav>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useState } from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport PathFinder from './components/PathFinder/PathFinder'\nimport WaveSpreading from './components/WaveSpreading/WaveSpreading'\nimport Header from './components/Header/Header'\n\n\nconst constructPath = (n, dest, path) => {\n  let c = n.prev\n  path.push(dest)\n  while (c) {\n    path.push(c.node)\n    c = c.prev\n  }\n  let tmp = path.reverse()\n  return tmp\n}\n\nconst searchHelper = (algorithm, withAnimations, setIsSearching) => {\n  console.log()\n  const path = []\n  let start = document.querySelector(`[data-start=true]`)\n  let dest = document.querySelector(`[data-dest=true]`)\n  let visited = new Set();\n  let startNode = {\n    node: start,\n    prev: null\n  }\n  let dataStructure = [startNode]\n  let inc = 0;\n  while (dataStructure.length > 0) {\n    let n;\n    switch (algorithm) {\n      case 'dfs': {\n        n = dataStructure.pop()\n        break\n      }\n      case 'bfs': {\n        n = dataStructure.shift()\n        break\n      }\n      default: {\n        return\n      }\n    }\n    if (!visited.has(n.node)) {\n      visited.add(n.node)\n      let nY = +n.node.getAttribute('y')\n      let nX = +n.node.getAttribute('x')\n      if (withAnimations) {\n        setTimeout(() => {\n          if (n.node === dest) {\n            let finalPath = constructPath(n, dest, path)\n            for (let i = 0; i < finalPath.length; i++) {\n              setTimeout(() => {\n                i === finalPath.length - 1 && setIsSearching(false)\n                path[i].classList.add('path')\n              }, i * 10)\n            }\n          }\n          !n.node.classList.value.includes('start') && !n.node.classList.value.includes('dest') && n.node.classList.add('visited')\n        }, 10 * ++inc)\n      }\n      else {\n        if (n.node === dest) {\n          let finalPath = constructPath(n, dest, path)\n          for (let i = 0; i < finalPath.length; i++) {\n            path[i].classList.add('path')\n          }\n        }\n        !n.node.classList.value.includes('start') && !n.node.classList.value.includes('dest') && n.node.classList.add('visitedNoAnimation')\n      }\n\n      let neighbors = [\n        document.querySelector(`[y=\"${nY}\"][x=\"${nX - 1}\"]`),\n        document.querySelector(`[y=\"${nY}\"][x=\"${nX + 1}\"]`),\n        document.querySelector(`[y=\"${nY - 1}\"][x=\"${nX}\"]`),\n        document.querySelector(`[y=\"${nY + 1}\"][x=\"${nX}\"]`),\n      ].filter(n => n && !n.classList.value.includes('wall')).map(node => {\n        return {\n          node: node,\n          prev: n\n        }\n      })\n      if (n.node === dest) {\n        break\n      }\n      dataStructure.push(...neighbors)\n    }\n  }\n}\n\nfunction App() {\n  const [currentAlgorithm, setCurrentAlgorithm] = useState(null);\n  const [isSearching, setIsSearching] = useState(null);\n\n  const dfs = () => {\n    setCurrentAlgorithm('dfs')\n    setIsSearching(true)\n    searchHelper('dfs', true, setIsSearching)\n  }\n\n\n  const bfs = () => {\n    setCurrentAlgorithm('bfs')\n    setIsSearching(true)\n    searchHelper('bfs', true, setIsSearching)\n  }\n\n\n  const reset = () => {\n    setCurrentAlgorithm(null)\n    let allSquares = document.querySelectorAll('.square');\n    allSquares.forEach(s => {\n      s.classList.remove('path', 'visited', 'visitedNoAnimation', 'wall')\n    })\n  }\n\n\n  return (\n    <>\n      <BrowserRouter>\n        <Header reset={reset} bfs={bfs} dfs={dfs} />\n        <Switch>\n          <Route exact path='/' render={() => <Redirect to='pathfinder' />} />\n          <Route path='/wave' render={() => <WaveSpreading />} />\n          <Route path='/pathfinder' render={() => <PathFinder isSearching={isSearching} currentAlgorithm={currentAlgorithm} searchHelper={searchHelper} />} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}